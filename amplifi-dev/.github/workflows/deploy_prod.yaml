name: PROD[:] Deploy Amplifi

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version name (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - prod
          - cch-prod
  push:
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (contains(github.ref_name, 'cch-prod') && 'cch-prod' || 'prod') }}
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Determine environment and directory
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ENV_DIR=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
              echo "GH_ENV=prod" >> $GITHUB_ENV
              echo "DOCKERFILE=./backend/k8s.Dockerfile" >> $GITHUB_ENV
            else
              echo "GH_ENV=cch-prod" >> $GITHUB_ENV
              echo "DOCKERFILE=./backend/k8s-obfs.Dockerfile" >> $GITHUB_ENV
            fi
            echo "TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            TAG_SUFFIX=$(echo "${{ github.ref_name }}" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$' | cut -d'-' -f2 || echo "")
            case "$TAG_SUFFIX" in
              "")
                echo "ENV_DIR=prod" >> $GITHUB_ENV
                echo "GH_ENV=prod" >> $GITHUB_ENV
                echo "DOCKERFILE=./backend/k8s.Dockerfile" >> $GITHUB_ENV
                ;;
              prod)
                echo "ENV_DIR=prod" >> $GITHUB_ENV
                echo "GH_ENV=prod" >> $GITHUB_ENV
                echo "DOCKERFILE=./backend/k8s.Dockerfile" >> $GITHUB_ENV
                ;;
              cch-prod)
                echo "ENV_DIR=cch-prod" >> $GITHUB_ENV
                echo "GH_ENV=cch-prod" >> $GITHUB_ENV
                echo "DOCKERFILE=./backend/k8s-obfs.Dockerfile" >> $GITHUB_ENV
                ;;
              *)
                echo "Invalid tag suffix: $TAG_SUFFIX"
                exit 1
                ;;
            esac
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

#      - name: Install Poetry
#        uses: snakemake/snakemake-github-action@v1
#        with:
#          poetry-version: '3.12'

      - name: Install the project dependencies
        run: |
          cd backend/app
          poetry install

      - name: Create PyArmor license directory
        if: env.GH_ENV == 'cch-prod'
        run: mkdir -p backend/py-files

      - name: Copy PyArmor CI license file
        if: env.GH_ENV == 'cch-prod'
        run: echo "${{ secrets.PYARMOR_CI_LICENSE }}" | base64 -d > backend/py-files/pyarmor-ci.zip
        env:
          environment: ${{ env.GH_ENV }}

      - run: sudo mv /dev/disk /dev/disk-none
        if: env.GH_ENV == 'cch-prod'
        env:
          environment: ${{ env.GH_ENV }}

      - name: Run Black to check code style
        run: |
          cd backend/app
          poetry run black --check --verbose app

      - name: Lint with Ruff
        uses: chartboost/ruff-action@v1
        with:
          src: './backend/app/app'

      - name: Run Bandit for security vulnerability
        run: |
          cd backend/app
          poetry run bandit -r . -c pyproject.toml

#      - name: Test with pytest
#        run: pytest * --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
#        working-directory: ./orthanc
#        continue-on-error: true
#
#      - name: Upload pytest test results
#        uses: actions/upload-artifact@v4
#        with:
#          name: pytest-results-${{ matrix.python-version }}
#          path: junit/test-results-${{ matrix.python-version }}.xml
#        if: ${{ always() }}

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER  }}
          username: ${{ secrets.REGISTRY_USERNAME  }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        env:
          environment: ${{ env.GH_ENV }}

      - name: Build fastapi-server, celery-worker, celery-beat images and push them to ACR
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: |
            ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-fastapi-server:${{ env.TAG }}-${{ github.sha }},
            ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-worker:${{ env.TAG }}-${{ github.sha }},
            ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-beat:${{ env.TAG }}-${{ github.sha }}

  modify-amplifi-gitops:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (contains(github.ref_name, 'cch-prod') && 'cch-prod' || 'prod') }}
    env:
      GITOPS_REPO: https://x-access-token:${{ secrets.GITOPS_PAT }}@github.com/thoughtswinsystems/amplifi-gitops.git
      GITOPS_REPO_NAME: amplifi-gitops

    steps:
      - name: Determine environment and directory
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ENV_DIR=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "GH_ENV=${{ github.event.inputs.environment == 'prod' && 'prod' || 'cch-prod' }}" >> $GITHUB_ENV
            echo "TAG=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            TAG_SUFFIX=$(echo "${{ github.ref_name }}" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$' | cut -d'-' -f2 || echo "")
            case "$TAG_SUFFIX" in
              "")
                echo "ENV_DIR=prod" >> $GITHUB_ENV
                echo "GH_ENV=prod" >> $GITHUB_ENV
                ;;
              prod)
                echo "ENV_DIR=prod" >> $GITHUB_ENV
                echo "GH_ENV=prod" >> $GITHUB_ENV
                ;;
              cch-prod)
                echo "ENV_DIR=cch-prod" >> $GITHUB_ENV
                echo "GH_ENV=cch-prod" >> $GITHUB_ENV
                ;;
              *)
                echo "Invalid tag suffix: $TAG_SUFFIX"
                exit 1
                ;;
            esac
            echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Clone GitOps repo
        run: |
          git clone $GITOPS_REPO
          cd $GITOPS_REPO_NAME
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update image version in fastapi-server manifest
        run: |
          cd $GITOPS_REPO_NAME/envs/${{ env.ENV_DIR }}/azure/code
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-fastapi-server:${{ env.TAG }}-${{ github.sha }}#g' fastapi-server-deployment.yaml
        env:
          environment: ${{ env.GH_ENV }}

      - name: Update image version in celery manifest
        run: |
          cd $GITOPS_REPO_NAME/envs/${{ env.ENV_DIR }}/azure/celery
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-worker:${{ env.TAG }}-${{ github.sha }}#g' celery-default-worker-deployment.yaml
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-worker:${{ env.TAG }}-${{ github.sha }}#g' celery-ingestion-worker-deployment.yaml
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-beat:${{ env.TAG }}-${{ github.sha }}#g' celery-beat-deployment.yaml
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-beat:${{ env.TAG }}-${{ github.sha }}#g' celery-file-compression-worker-deployment.yaml
          sed -i 's#image: .*#image: ${{ secrets.REGISTRY_LOGIN_SERVER  }}/amplifi-celery-beat:${{ env.TAG }}-${{ github.sha }}#g' celery-ingestion-gpu-worker-deployment.yaml
        env:
          environment: ${{ env.GH_ENV }}

      - name: Commit and push changes
        run: |
          cd $GITOPS_REPO_NAME
          git add envs/${{ env.ENV_DIR }}/azure/code/fastapi-server-deployment.yaml
          git add envs/${{ env.ENV_DIR }}/azure/celery/celery-default-worker-deployment.yaml
          git add envs/${{ env.ENV_DIR }}/azure/celery/celery-ingestion-worker-deployment.yaml
          git add envs/${{ env.ENV_DIR }}/azure/celery/celery-beat-deployment.yaml
          git add envs/${{ env.ENV_DIR }}/azure/celery/celery-file-compression-worker-deployment.yaml
          git add envs/${{ env.ENV_DIR }}/azure/celery/celery-ingestion-gpu-worker-deployment.yaml
          git commit -m "Update image version for ${{ env.ENV_DIR }} to ${{ env.TAG }}-${{ github.sha }}"
          git push
