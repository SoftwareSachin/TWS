"""empty message

Revision ID: cb58273122bc
Revises: e0e3bd08cc57
Create Date: 2025-07-23 18:36:24.971778

"""

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel  # added


# revision identifiers, used by Alembic.
revision = "cb58273122bc"
down_revision = "4958fd8b64d0"
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")    
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before creating
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    if 'graphs' not in inspector.get_table_names():
        op.create_table(
            "graphs",
            sa.Column(
                "status",
                sa.Enum("SUCCESS", "PENDING", "FAILED", name="graphstatus"),
                nullable=False,
            ),
            sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
            sa.Column("updated_at", sa.DateTime(), nullable=True),
            sa.Column("created_at", sa.DateTime(), nullable=True),
            sa.Column("deleted_at", sa.DateTime(), nullable=True),
            sa.Column("dataset_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
            sa.Column("error_message", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
            sa.ForeignKeyConstraint(
                ["dataset_id"],
                ["datasets.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
        )
        op.create_index(op.f("ix_graphs_id"), "graphs", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_graphs_id"), table_name="graphs")
    op.drop_table("graphs")
    op.execute("DROP TYPE IF EXISTS graphstatus")
    # ### end Alembic commands ###
