"""empty message

Revision ID: 4faace2404b8
Revises: e3e0640094ff
Create Date: 2024-11-22 04:27:27.223110

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '4faace2404b8'
down_revision = 'e3e0640094ff'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('r2r_provider_chunking_config',
    sa.Column('chunking_strategy', sa.String(), nullable=False),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('excluded_parsers', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('chunking_config_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['chunking_config_id'], ['chunking_config.id'], ),
    sa.PrimaryKeyConstraint('chunking_config_id'),
    sa.UniqueConstraint('chunking_config_id')
    )
    op.create_table('transferred_files',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('file_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('workflow_run_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('dataset_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('workflow_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('transferred_at', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.ForeignKeyConstraint(['workflow_run_id'], ['workflow_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('default_provider_chunking_config')
    op.create_unique_constraint(None, 'deployment_info', ['version'])
    op.add_column('file_ingestion', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('file_ingestion', sa.Column('finished_at', sa.DateTime(), nullable=True))
    op.drop_column('unstructured_provider_chunking_config', 'max_chunk_size')
    op.drop_column('unstructured_provider_chunking_config', 'output_format')
    op.add_column('workflows', sa.Column('dataset_id', sqlmodel.sql.sqltypes.GUID(), nullable=False))
    op.add_column('workflows', sa.Column('scheduled', sa.Boolean(), nullable=False))
    op.drop_constraint('workflows_workspace_id_fkey', 'workflows', type_='foreignkey')
    op.create_foreign_key(None, 'workflows', 'datasets', ['dataset_id'], ['id'])
    op.drop_column('workflows', 'workspace_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workflows', sa.Column('workspace_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'workflows', type_='foreignkey')
    op.create_foreign_key('workflows_workspace_id_fkey', 'workflows', 'workspaces', ['workspace_id'], ['id'])
    op.drop_column('workflows', 'scheduled')
    op.drop_column('workflows', 'dataset_id')
    op.add_column('unstructured_provider_chunking_config', sa.Column('output_format', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('unstructured_provider_chunking_config', sa.Column('max_chunk_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('file_ingestion', 'finished_at')
    op.drop_column('file_ingestion', 'name')
    op.drop_constraint(None, 'deployment_info', type_='unique')
    op.create_table('default_provider_chunking_config',
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('chunk_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chunk_overlap', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_chunk_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chunking_config_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chunking_config_id'], ['chunking_config.id'], name='default_provider_chunking_config_chunking_config_id_fkey'),
    sa.PrimaryKeyConstraint('chunking_config_id', name='default_provider_chunking_config_pkey'),
    sa.UniqueConstraint('chunking_config_id', name='default_provider_chunking_config_chunking_config_id_key'),
    sa.UniqueConstraint('chunking_config_id', name='default_provider_chunking_config_chunking_config_id_key1')
    )
    op.drop_table('transferred_files')
    op.drop_table('r2r_provider_chunking_config')
    # ### end Alembic commands ###
