"""empty message

Revision ID: d85c1a883bc0
Revises: 0a9bac89265b
Create Date: 2025-06-12 06:49:32.977661

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = 'd85c1a883bc0'
down_revision = '0a9bac89265b'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### manually renmaing the enum
    # ### end Alembic commands ###

     # Check if the enum types already exist and create them only if they don't
    conn = op.get_bind()
    
    # Check for documenttypeenum
    result = conn.execute(sa.text("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'documenttypeenum')")).scalar()
    if not result:
        # Create the enum type if it doesn't exist
        op.execute(sa.text("CREATE TYPE documenttypeenum AS ENUM ('Image', 'Audio', 'Video', 'PDF')"))
    op.execute("ALTER TYPE documenttypeenum ADD VALUE IF NOT EXISTS 'PDF'")
    
    
    # Check for chunktypeenum
    result = conn.execute(sa.text("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'chunktypeenum')")).scalar()
    if not result:
        # Create the enum type if it doesn't exist
        op.execute(sa.text("CREATE TYPE chunktypeenum AS ENUM ('ImageDescription' , 'ImageText', 'ImageObject', 'AudioSegment', 'Speaker', 'VideoScene', 'PDFText', 'PDFTable')"))
    op.execute("ALTER TYPE chunktypeenum ADD VALUE IF NOT EXISTS 'PDFText'")
    op.execute("ALTER TYPE chunktypeenum ADD VALUE IF NOT EXISTS 'PDFTable'")



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
