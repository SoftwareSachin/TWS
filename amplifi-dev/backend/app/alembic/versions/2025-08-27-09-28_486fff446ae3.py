"""add_version_and_restructure_vanna_trainings

Revision ID: 486fff446ae3
Revises: 29a594d18eb1
Create Date: 2025-08-27 09:28:05.635706

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '486fff446ae3'
down_revision = 'e768ee5b2ef9'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before creating
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    if 'vanna_trainings' not in inspector.get_table_names():
        op.create_table('vanna_trainings',
        sa.Column('documentation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('version_id', sa.Integer(), nullable=False),
        sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('dataset_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('question_sql_pairs', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_vanna_trainings_id'), 'vanna_trainings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vanna_trainings_id'), table_name='vanna_trainings')
    op.drop_table('vanna_trainings')
    # ### end Alembic commands ###
