"""empty message

Revision ID: 0a9bac89265b
Revises: 8f3df49b6e4f
Create Date: 2025-06-11 08:51:16.943562

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0a9bac89265b'
down_revision = '8f3df49b6e4f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")

    op.alter_column(
        'system_tools',
        'input_schema',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
        postgresql_using="input_schema::text"
    )
    op.alter_column(
        'system_tools',
        'output_schema',
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
        postgresql_using="output_schema::text"
    )

    op.add_column('workspace_tools', sa.Column('tool_ids', postgresql.ARRAY(sa.UUID()), nullable=True))
    op.drop_constraint(op.f('workspace_tools_tool_id_fkey'), 'workspace_tools', type_='foreignkey')
    op.drop_column('workspace_tools', 'tool_id')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workspace_tools', sa.Column('tool_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('workspace_tools_tool_id_fkey'), 'workspace_tools', 'tools', ['tool_id'], ['id'])
    op.drop_column('workspace_tools', 'tool_ids')

    op.alter_column(
        'system_tools',
        'output_schema',
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=True,
        postgresql_using="output_schema::json"
    )
    op.alter_column(
        'system_tools',
        'input_schema',
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=True,
        postgresql_using="input_schema::json"
    )
    # ### end Alembic commands ###