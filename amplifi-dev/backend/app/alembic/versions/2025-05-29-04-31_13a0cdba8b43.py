"""empty message

Revision ID: 13a0cdba8b43
Revises: d042da299bf4
Create Date: 2025-05-29 04:31:38.463811

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = '13a0cdba8b43'
down_revision = 'd042da299bf4'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prompt_instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('llm_provider', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('llm_model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('system_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('memory_enabled', sa.Boolean(), nullable=False),
    sa.Column('agent_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_index(op.f('ix_agents_name'), 'agents', ['name'], unique=True)
    op.create_table('agent_tools',
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('agent_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('tool_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_tools_id'), 'agent_tools', ['id'], unique=False)
    op.create_table('workspace_agents',
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('workspace_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('agent_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workspace_agents_id'), 'workspace_agents', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workspace_agents_id'), table_name='workspace_agents')
    op.drop_table('workspace_agents')
    op.drop_index(op.f('ix_agent_tools_id'), table_name='agent_tools')
    op.drop_table('agent_tools')
    op.drop_index(op.f('ix_agents_name'), table_name='agents')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_table('agents')
    # ### end Alembic commands ###
