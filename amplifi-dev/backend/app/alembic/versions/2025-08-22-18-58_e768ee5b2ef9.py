"""empty message

Revision ID: e768ee5b2ef9
Revises: 60f439dbea2c
Create Date: 2025-08-22 18:58:02.007906

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added


# revision identifiers, used by Alembic.
revision = 'e768ee5b2ef9'
down_revision = '15e572795ed8'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm") 
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before adding them
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Get existing columns for azure_storage table
    azure_storage_columns = [col['name'] for col in inspector.get_columns('azure_storage')]
    
    if 'auto_detection_enabled' not in azure_storage_columns:
        op.add_column('azure_storage', sa.Column('auto_detection_enabled', sa.Boolean(), nullable=True))
    if 'last_monitored' not in azure_storage_columns:
        op.add_column('azure_storage', sa.Column('last_monitored', sa.DateTime(), nullable=True))
    if 'monitoring_frequency_minutes' not in azure_storage_columns:
        op.add_column('azure_storage', sa.Column('monitoring_frequency_minutes', sa.Integer(), nullable=True))
    if 're_ingest_updated_blobs' not in azure_storage_columns:
        op.add_column('azure_storage', sa.Column('re_ingest_updated_blobs', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('azure_storage', 're_ingest_updated_blobs')
    op.drop_column('azure_storage', 'monitoring_frequency_minutes')
    op.drop_column('azure_storage', 'last_monitored')
    op.drop_column('azure_storage', 'auto_detection_enabled')
    # ### end Alembic commands ###
