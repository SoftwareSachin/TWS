"""empty message

Revision ID: 198adaa6b207
Revises: 8b02c7f9b73e
Create Date: 2025-08-18 17:35:31.230782

"""

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel  # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "198adaa6b207"
down_revision = "8b02c7f9b73e"
branch_labels = None
depends_on = None


def upgrade():
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if columns exist before adding them
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Get existing columns for graphs table
    graphs_columns = [col['name'] for col in inspector.get_columns('graphs')]
    
    if 'entities_status' not in graphs_columns:
        op.add_column(
            "graphs",
            sa.Column(
                "entities_status",
                sa.Enum("SUCCESS", "PENDING", "FAILED", name="graphstatus"),
                nullable=True,
            ),
        )
    
    if 'relationships_status' not in graphs_columns:
        op.add_column(
            "graphs",
            sa.Column(
                "relationships_status",
                sa.Enum("SUCCESS", "PENDING", "FAILED", name="graphstatus"),
                nullable=True,
            ),
        )

    # Update existing rows with default values
    op.execute(
        "UPDATE graphs SET entities_status = 'PENDING' WHERE entities_status IS NULL"
    )
    op.execute(
        "UPDATE graphs SET relationships_status = 'PENDING' WHERE relationships_status IS NULL"
    )

    # Now make columns NOT NULL
    op.alter_column("graphs", "entities_status", nullable=False)
    op.alter_column("graphs", "relationships_status", nullable=False)

    # Only drop status column if it exists
    if 'status' in graphs_columns:
        op.drop_column("graphs", "status")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "graphs",
        sa.Column(
            "status",
            postgresql.ENUM(
                "SUCCESS", "PENDING", "FAILED", "ENTITIES_EXTRACTED", name="graphstatus"
            ),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("graphs", "relationships_status")
    op.drop_column("graphs", "entities_status")
    # ### end Alembic commands ###
